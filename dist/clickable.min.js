"use strict";var ClickableCautions=function(t){var n=this.formatConstructed(t);return n.warn=this.warn.bind(n),n.warn(),n};ClickableCautions.prototype={formatConstructed:function(t){var n=t||{};return n.warnings=n.warnings||[],void 0===t?(n.warnings.push("needs a valid clickable constructor to do anything"),this.warn.call(n),n):n},warn:function(){for(var t=0;t<this.warnings.length;t++)console.warn(this.warnings[t])}};var ClickableConstructor=function(t){var n=arguments.length<=1||void 0===arguments[1]?!0:arguments[1],i={wrapper:".js-clickable-interaction",content:".js-clickable-content-area",indicators:".js-clickable-content-indicator",navigation:{targets:".js-clickable-target",prev:".js-clickable-prev",next:".js-clickable-next"},meta:{clear:".js-clickable-clear",start:".js-clickable-start"},infinite:!0,toggle:!1};return this.constructed=new ClickableCautions(i),this.constructed=this.mergeArgs(this.constructed,t),this.constructed=this.setDefaults(this.constructed),n&&(this.constructed=this.init(this.constructed),this.constructed.total=this.constructed.contentAreas.length||0),this.constructed};ClickableConstructor.prototype={mergeArgs:function(t,n){var i={};for(var e in t)i[e]=t[e];for(var e in n)void 0!==t[e]&&(i[e]=n[e]);return i},setDefaults:function(t){var n=t;return n._index=0,Object.defineProperty(n,"index",{configurable:!0,get:function(){return n._index},set:function(t){return n._index=t}}),Object.defineProperty(n,"printIndex",{configurable:!0,get:function(){return this._index}}),n._total=0,Object.defineProperty(n,"total",{configurable:!0,get:function(){return n._total},set:function(t){return n._total=t}}),n.get=this.getDepth,n},init:function(t){var n=t;return n=this.setupWrapper(n),n=this.setupContent(n),n=this.setupNavigation(n),n=this.setupIndicators(n),n=this.setupMetaControls(n),n=this.setOnClicks(n)},setupWrapper:function(t){return t.interaction=$(t.wrapper),t},setupContent:function(t){return t.contentAreas=this.findInInteraction(t,t.content),t},setupIndicators:function(t){var n,i;return t.indicators=this.findInInteraction(t,t.indicators),n=t.contentAreas.length||0,i=t.indicators.length||0,1>n+i&&t.warnings.push("no content found"),t.warn(),t},setupNavigation:function(t){var n,i,e;return t.navigation.targets=this.findInInteraction(t,t.navigation.targets),t.navigation.prev=this.findInInteraction(t,t.navigation.prev),t.navigation.next=this.findInInteraction(t,t.navigation.next),n=t.navigation.prev.length||0,i=t.navigation.next.length||0,e=t.navigation.targets.length||0,1>n+i+e&&t.warnings.push("no navigation found"),t.warn(),t},setOnClicks:function(t){for(var n in t.navigation)t.navigation[n]!==!1&&(t.navigation[n].preclick=[]);return t},setupMetaControls:function(t){return t.navigation.clear=this.findInInteraction(t,t.meta.clear),t.navigation.start=this.findInInteraction(t,t.meta.start),t},findInInteraction:function(t,n){return $(t.interaction).find(n).length>0?$(t.interaction).find(n):!1},getDepth:function(t,n){var i=this[t];return void 0!==n&&(i=i[n]),i}};var ClickableController=function(t){return this.constructed=new ClickableCautions(t),this.extend.call(this.constructed,this),this.constructed.init(this.constructed),this.constructed};ClickableController.prototype={extend:function(t){for(var n in t)t.hasOwnProperty(n)===!1&&(this[n]=t[n])},init:function(){return this.navigation.type="initial",this.setupEvents(),this.startScreen(),this},startScreen:function(){return this.navigation.start?void 0:(this.goTo(0),this)},goTo:function(t){this.index=t,this.makeAllInactive(),this.makeActive()},prev:function(){this.decrementIndex(),this.makeAllInactive(),this.makeActive()},next:function(){this.incrementIndex(),this.makeAllInactive(),this.makeActive()},reset:function(){this.makeAllInactive(),this.clearNavigationType()},decrementIndex:function(){this.index>0?this.index--:this.infinite&&(this.index=this.total-1)},incrementIndex:function(){this.index<this.total-1?this.index++:this.infinite&&(this.index=0)},setupEvents:function(t){var n=this;return $(this.get("navigation","prev")).click(function(t){t.preventDefault(),n.callPreclickFuncs("prev"),n.prev(),n.setNavigationType("linear")}),$(this.get("navigation","next")).click(function(t){t.preventDefault(),n.callPreclickFuncs("next"),n.next(),n.setNavigationType("linear")}),$(this.get("navigation","clear")).click(function(t){t.preventDefault(),n.callPreclickFuncs("clear"),n.reset(),n.setNavigationType("initial")}),$(this.get("navigation","start")).click(function(t){t.preventDefault(),n.callPreclickFuncs("start"),n.goTo(0),n.setNavigationType("linear")}),$(this.get("navigation","targets")).click(function(t){t.preventDefault(),n.callPreclickFuncs("targets"),n.goTo(n.get("navigation","targets").index(this)),n.setNavigationType("targetted")}),t},callPreclickFuncs:function(t){var n=this.get("navigation",t).preclick;for(var i in n)n[i]()},setNavigationType:function(t){this.clearNavigationType(),this.navigation.type=t,this.addClassSVG(this.interaction,this.navigation.type),"start"!==t&&this.addClassSVG(this.interaction,"navigated")},clearNavigationType:function(){this.removeClassSVG(this.interaction,this.navigation.type),this.removeClassSVG(this.interaction,"navigated")},makeActive:function(){var t=this.index,n=this.get("contentAreas"),i=this.get("indicators"),e=n.length||0,a=i.length||0;return this.isToggle&&n.active===t?void(n.active=!1):(this.addInteractionActiveClass(),n.length>0&&(this.addClassSVG(n[t],"active"),n.active=t),i.length>0&&(this.removeClassSVG(i[t],"visited"),this.addClassSVG(i[t],"active")),void(1>e+a&&(this.warnings.push("no content to activate"),this.warn())))},makeAllInactive:function(){var t=this.get("contentAreas"),n=this.get("indicators");t.length&&this.removeClassSVG(t,"active"),n.length&&(this.makeIndicatorVisited(),this.removeClassSVG(n,"active")),this.removeInteractionActiveClass()},addInteractionActiveClass:function(){this.addClassSVG(this.interaction,"active-"+this.printIndex)},removeInteractionActiveClass:function(){for(var t=0;t<this.total;t++)this.removeClassSVG(this.interaction,"active-"+this.printIndex)},makeIndicatorVisited:function(){var t=this;$(this.get("indicators")).each(function(){$(this).attr("class").indexOf("active")>0&&t.addClassSVG(this,"visited")})},addClassSVG:function(t,n){t.length>0?this.addMultipleClasses(t,n):this.addSingularClass(t,n)},addSingularClass:function(t,n){if(void 0!==t){var i=$(t).attr("class");$(t).attr("class",i+" "+n)}},addMultipleClasses:function(t,n){for(var i,e=0;e<t.length;e++)i=$(t[e]).attr("class"),$(t[e]).attr("class",i+" "+n)},removeClassSVG:function(t,n){t.length>0?this.removeMultipleClasses(t,n):this.removeSingularClass(t,n)},removeSingularClass:function(t,n){var i=$(t).attr("class"),e=i.replace(" "+n,"");$(t).attr("class",e)},removeMultipleClasses:function(t,n){for(var i,e,a=0;a<t.length;a++)i=$(t[a]).attr("class"),e=i.replace(" "+n,""),$(t[a]).attr("class",e)}};var ClickableContext=function(t){return this.constructed=new ClickableCautions(t),this.constructed=this.init(this.constructed),this.constructed.context&&(this.constructed=this.sortCollections(this.constructed),this.constructed=this.overrideDefaults(this.constructed)),this.constructed};ClickableContext.prototype={init:function(t){return t=this.setInitialData(t),t=this.setTotalData(t),t=this.setIndexData(t)},overrideDefaults:function(t){return Object.defineProperty(t,"index",{get:function(){return this._index[this.context]},set:function(t){return this._index[this.context]=t}}),Object.defineProperty(t,"printIndex",{get:function(){return this.context+"-"+this.index}}),Object.defineProperty(t,"total",{get:function(){return this._total[this.context]},set:function(t){return this._total[this.context]=t}}),t.get=this.getContextDepth,t},setInitialData:function(t){return t.context=!1,t},findContextCount:function(t){var n={},i=this;return $(t).each(function(){var t=$(this).data("context");n=i.addToOrInit(n,t)}),n},setTotalData:function(t){var n=this.findContextCount(t.contentAreas);for(var i in n)if("context_default"!==i)return t.context="context_default",t._total=n,t;return t},setIndexData:function(t){if(!t.context)return t;t._index={};for(var n in t.total)t._index[n]=0;return t},addToOrInit:function(t,n){var i=n||"default",e="context_"+i;return t.hasOwnProperty(e)?(t[e]+=1,t):(t[e]=0,t)},sortCollections:function(t){return t.contentAreas=this.contextSort(t,"contentAreas"),t.indicators=this.contextSort(t,"indicators"),t.navigation.targets=this.contextSort(t,"navigation","targets"),t.navigation.prev=this.contextSort(t,"navigation","prev"),t.navigation.next=this.contextSort(t,"navigation","next"),this.warnAboutNavigation(t),t},contextSort:function(t,n,i){var e,a=t.get(n,i),r=this;return a&&(e=a.preclick),$(a).filter(function(){return a=$(a).not($(this)),$(this)}).each(function(){var t=r.setContextKey($(this));void 0===a[t]&&(a[t]=$()),a[t]=$(a[t]).add($(this))}),e&&(a.preclick=e,a.preclick.push(r.parseContext)),a},warnAboutNavigation:function(t){for(var n in t.index)void 0===t.navigation.targets[n]&&void 0===t.navigation.prev[n]&&void 0===t.navigation.next[n]&&t.warnings.push("there is no navgation for the context "+n);t.warn()},parseContext:function(t){return void 0!==t&&$(t).data("context")?void(this.context="context_"+$(t).data("context")):void(this.context="context_default")},getContextDepth:function(t,n){var i=this[t][this.context];return void 0!==n&&(i=i[n]),i},setContextKey:function(t){var n=t.data("context")||"default";return"context_"+n}},function(t,n){"object"==typeof module&&"object"==typeof module.exports?module.exports=t.document?n(t,!0):function(t){if(!t.document)throw new Error("requires a window with a document");return n(t)}:n(t)}("undefined"!=typeof window?window:void 0,function(t,n){var i=function(t){var n={};return n=new ClickableConstructor(t),n=new ClickableContext(n),n=new ClickableController(n)};return"undefined"==typeof n&&(t.Clickable=i),i});
//# sourceMappingURL=data:application/json;base64,